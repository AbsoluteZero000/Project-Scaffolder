{
  "{{projectName}}": {
      "src": {
          "app": {
              "routes": {
                  "health.py": "# This is a sample route file\n# it contains the functions and logic for the routes\n# the api variable is the blueprint that is used to register the routes\n\nfrom . import api\n\n# Use annotations to define the endpoint that is going to appended to the prefix defined in the __main__.py file\n@api.route('/health', methods=[\"GET\"])\ndef health_check():\n  return \"App running nicely :)\"\n\n",
                  "__init__.py": "from flask import Blueprint\n\n\n# This is a sample route file\n# it contains the blueprint that you will use to register the routes\n# the api variable is the blueprint that will be used to register the routes\napi = Blueprint(\"api\", __name__)\n\nfrom . import health\n"
              },
              "__init__.py": "",
              "__main__.py": "from flask import Flask\nfrom routes import api as api_blueprint\n{{mainImports}}\n# Create the Flask app\napp = Flask(__name__)\n\n# Register the blueprint\napp.register_blueprint(api_blueprint, url_prefix=\"/api\")\n{{appConfig}}\n# Define the index route\n@app.route(\"/\")\ndef index():\n  return \"Hello, user test your routes by using /api/health\"\n\nif __name__ == \"__main__\":\n\n  # Run the app\n  app.run(\"localhost\", 5000)\n"
          }
      },
      "tests": {
          "__init__.py": ""
      },
      ".gitignore": "__pycache__/\n.python-version\n\n# Code editor and IDE ignores\n.vscode\n.idea\n",
      "pyproject.toml": "[tool.poetry]\nname = \"projectName\"\nversion = \"0.1.0\"\ndescription = \"\"\nauthors = [\"Your Name <you@example.com>\"]\nreadme = \"README.md\"\npackage-mode = false\n\n[tool.poetry.dependencies]\npython = \"^3.12\"\nflask = \"^3.0.3\"\n{{poetryDependencies}}\n\n[build-system]\nrequires = [\"poetry-core\"]\nbuild-backend = \"poetry.core.masonry.api\"\n",
      "README.md": "*First run create your python virtual environment by using venv\n  python -m venv \"virtual-env-name\"\nand activate it using the activation script found in the bin directory in the venv\n\n*Then install poetry using pip\n  pip install poetry\n\n*You can now use poetry to manage your dependencies easily, firstly install the default dependencies\n  poetry install\n{{readme}}"
  }
}
